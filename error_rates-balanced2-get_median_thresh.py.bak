
#import modules
import sys
import fn

def print_help():
	print'''
inp1 = threshold file
'''

def get_median_threshold(fl):
	l = []
	inp = open(fl)
	for line in inp:
		if not line.startswith("#"):
			lineLst = line.strip().split("\t")
			# print line,lineLst
			thresh = float(lineLst[0])
			l.append(thresh)
	inp.close()
	
	med_thr = fn.median(l)
	
	return med_thr

def calc_ave_error_rates(fl,med_thr):
	fmeas_l = []
	fnr_l = []
	fpr_l = []
	inp = open(fl)
	for line in inp:
		if not line.startswith("#"):
			thresh,fmeas,fnr,fpr = line.strip().split("\t")
			if float(thresh) == med_thr:
				fmeas_l.append(float(fmeas))
				fnr_l.append(float(fnr))
				fpr_l.append(float(fpr))
	inp.close()
	
	ave_fmeas = sum(fmeas_l)/float(len(fmeas_l))
	ave_fnr = sum(fnr_l)/float(len(fnr_l))
	ave_fpr = sum(fpr_l)/float(len(fpr_l))
	return ave_fmeas,ave_fnr,ave_fpr
	# return ave_fnr,ave_fpr

def main():
	if len(sys.argv) == 1 or "-h" in sys.argv:
		print_help()
		sys.exit()
	
	try:
		threshold_file = sys.argv[1]
	except:
		print_help()
		print "Error reading arguments, quitting!"
		sys.exit()
	
	median_threshold = get_median_threshold(threshold_file)
	average_fmeas,average_fnr,average_fpr = calc_ave_error_rates(threshold_file,median_threshold)
	print threshold_file,median_threshold,average_fmeas,average_fnr,average_fpr
	# average_fnr,average_fpr = calc_ave_error_rates(threshold_file,median_threshold)
	# print threshold_file,median_threshold,average_fnr,average_fpr

if __name__ == "__main__":
	main()
